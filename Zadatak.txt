#!/usr/bin/env python3

import subprocess
import datetime
import psutil

def check_cpu():  # Provjeri CPU: PASS ako je iskorištenost < 10%
    cpu = psutil.cpu_percent(interval=1)
    status = "PASS" if cpu < 10 else "FAIL"
    return status, cpu

def check_memory():  # Provjeri slobodnu memoriju: PASS ako je > 500 MB
    mem = psutil.virtual_memory()
    free_mb = mem.available / (1024 * 1024)
    status = "PASS" if free_mb > 500 else "FAIL"
    return status, free_mb

def check_disk():  # Provjeri zauzetost diska na '/' particiji: PASS ako < 80%
    usage = psutil.disk_usage('/')
    status = "PASS" if usage.percent < 80 else "FAIL"
    return status, usage.percent

def get_running_services():  # Vrati listu svih trenutno pokrenutih systemd servisa
    cmd = ['systemctl', 'list-units', '--type=service', '--state=running']
    proc = subprocess.run(cmd, capture_output=True, text=True)
    services = []
    for line in proc.stdout.splitlines():
        if '.service' in line:
            parts = line.split()
            if parts:
                services.append(parts[0])
    return services

def main(): 
    now = datetime.datetime.now()
    timestamp = now.strftime('%Y-%m-%d %H:%M:%S')
    report_name = f"system_health_report_{now.strftime('%Y-%m-%d_%H-%M-%S')}.txt"

    cpu_status, cpu_val = check_cpu()
    mem_status, mem_val = check_memory()
    disk_status, disk_val = check_disk()
    services = get_running_services()

    with open(report_name, 'w') as report:
        report.write(f"System Health Report - {timestamp}\n\n")
        report.write(f"CPU Check: {cpu_status} ({cpu_val:.1f}% used)\n")
        report.write(f"Memory Check: {mem_status} ({mem_val:.1f}MB free)\n")
        report.write(f"Disk Check: {disk_status} (/ at {disk_val:.1f}%)\n")
        report.write("Running services:\n")
        for svc in services:
            report.write(f"- {svc}\n")

    print(f"Završeno! Izvještaj je u fajlu: {report_name}")

if __name__ == "__main__":
    main()
